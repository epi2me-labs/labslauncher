stages:
    - test
    - build
    - push
    - publish

test:
    image: ${IMAGE}:16.04
    stage: test
    tags:
        - linux
    before_script:
        - export DEBIAN_FRONTEND=noninteractive
        - apt-get update -qq && apt-get install -y -qq
          python-virtualenv python3-dev
    script:
        - PYTHON=python3 make test

###
# Windows
#
.build-win: &build-win
    stage: build
    tags:
        - epi2melabs-win

build-win-colab:
    <<: *build-win
    variables:
        NOCOLAB: 0
    script:
        - .\winbuild.ps1
        - Move-Item dist/epi2melabs-installer.exe ont-epi2melabs-installer.exe
    artifacts:
        paths:
            - "ont-epi2melabs-installer.exe"

build-win-nocolab:
    <<: *build-win
    variables:
        NOCOLAB: 1
    script:
        - .\winbuild.ps1
        - Move-Item dist/epi2melabs-installer.exe ont-epi2melabs-jupyter-installer.exe
    artifacts:
        paths:
            - "ont-epi2melabs-jupyter-installer.exe"

###
# macos
# #
.build-macos: &build-macos
    stage: build
    tags:
        - epi2melabs-macos

build-macos-colab:
    <<: *build-macos
    variables:
        NOCOLAB: 0
    script:
        - PYTHON=python3 make build
        - cd dist; zip -r ../ont-epi2melabs-launcher-${CI_COMMIT_REF_NAME}-macos.app.zip EPI2ME-Labs-Launcher.app
    artifacts:
        paths:
            - "ont-epi2melabs-launcher-${CI_COMMIT_REF_NAME}-macos.app.zip"

###
# Ubuntu
#
.build-ubuntu: &build-ubuntu
    image: ${IMAGEUSED}
    stage: build
    tags:
        - linux
    script:
        - export DEBIAN_FRONTEND=noninteractive
        - apt-get update -qq && apt-get install -y -qq
          build-essential wget fakeroot rsync ssh python-virtualenv python3-dev xvfb libx11-xcb1 libxext6 libxrender1 libsm6 libice6 libglib2.0-0
        - PYTHON=python3 make deb
        - dpkg -I ont-epi2melabs-launcher*.deb
    artifacts:
        paths:
            - "ont-epi2melabs-launcher*.deb"
    except:
        - tags

.setup-tag: &tag
    before_script:
        - IFS='.' read -ra PARTS <<< "${CI_COMMIT_TAG}"
        - export MAJOR=${PARTS[0]:1}
        - export MINOR=${PARTS[1]}
        - export SUB=${PARTS[2]}
        - export DEBVER="$MAJOR.$MINOR.$SUB"
        # check the version in the python package matches the tag
        - PYVER=$(grep "__version__ = " labslauncher/__init__.py | awk '{gsub("\"","",$3); print $3}')
        - echo "DEBVER='$DEBVER'   PYVER='$PYVER'"
        - if [[ "$PYVER" != "$DEBVER" ]]; then echo "Mismatching TAG and PACKAGE versions"; exit 1; else echo "TAG and PACKAGE versions agree."; fi
        - echo -e "\e[1m\e[34mTagging with '\e[35m$MAJOR.$MINOR.$SUB\e[34m'\e[0m"
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    except:
        - branches

.xenial-colab: &xenial-colab
    <<: *build-ubuntu
    variables:
        IMAGEUSED: ${IMAGE}:16.04
        NOCOLAB: 0

.xenial-nocolab: &xenial-nocolab
    <<: *build-ubuntu
    variables:
        IMAGEUSED: ${IMAGE}:16.04
        NOCOLAB: 1
        
.bionic-colab: &bionic-colab
    <<: *build-ubuntu
    variables:
        IMAGEUSED: ${IMAGE}:18.04
        NOCOLAB: 0

.bionic-nocolab: &bionic-nocolab
    <<: *build-ubuntu
    variables:
        IMAGEUSED: ${IMAGE}:18.04
        NOCOLAB: 1

# branches
xenial-deb-colab:
    <<: *xenial-colab
xenial-deb-nocolab:
    <<: *xenial-nocolab
bionic-deb-colab:
    <<: *bionic-colab
bionic-deb-nocolab:
    <<: *bionic-nocolab

# tags
xenial-tag-colab:
    <<: *xenial-colab
    <<: *tag
xenial-tag-nocolab:
    <<: *xenial-nocolab
    <<: *tag
bionic-tag-colab:
    <<: *bionic-colab
    <<: *tag
bionic-tag-nocolab:
    <<: *bionic-nocolab
    <<: *tag


###
# Push
#

bundle:
    stage: publish
    script:
        - echo "Just gathering artifacts in one place"
    artifacts:
        paths:
            - "ont-epi2melabs*installer.exe"
            - "ont-epi2melabs-launcher*.deb"
            - "ont-epi2melabs-launcher-*-macos.app.zip"
    
    
.setup-deb-push: &setup-deb-push
    image: ${IMAGE}:16.04
    before_script:
        - eval $(ssh-agent -s)
        - ssh-add <(echo "${SSH_PRIVATE_KEY}")

push-debs:
    <<: *setup-deb-push
    stage: push
    script:
        - for CODENAME in xenial bionic; do scp -o StrictHostKeyChecking=no *${CODENAME}.deb ${DEBREPO}:/var/www/apt/${CODENAME}-stable; done
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    except:
        - branches

push-external:
    <<: *setup-deb-push
    stage: publish
    script:
        - for CODENAME in xenial bionic; do scp -o StrictHostKeyChecking=no *${CODENAME}.deb ${EXTERNALDEBREPO}:/mirror/apt/incoming/${CODENAME}-stable; done
    dependencies:
        - xenial-tag-colab
        - xenial-tag-nocolab
        - bionic-tag-colab
        - bionic-tag-nocolab
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    except:
        - branches
    when: manual


