stages:
    - test
    - build
    - push
    - publish

test:
    image: ${IMAGE}:16.04
    stage: test
    before_script:
        - export DEBIAN_FRONTEND=noninteractive
        - apt-get update -qq && apt-get install -y -qq
          python-virtualenv python3-dev enchant
    script:
        - PYTHON=python3 make test

.build: &build
    image: ${IMAGEUSED}
    stage: build
    script:
        - export DEBIAN_FRONTEND=noninteractive
        - apt-get update -qq && apt-get install -y -qq
          build-essential wget fakeroot rsync ssh python-virtualenv python3-dev enchant xorg xvfb
        - export DISPLAY=:99.0
        - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1280x720x24 -ac +extension GLX
        - PYTHON=python3 make deb
        - dpkg -I ont-epi2melabs-launcher*.deb
    artifacts:
        paths:
            - "ont-epi2melabs-launcher*.deb"
    except:
        - tags

.xenial: &xenial
    <<: *build
    variables:
        IMAGEUSED: ${IMAGE}:16.04
    
.bionic: &bionic
    <<: *build
    variables:
        IMAGEUSED: ${IMAGE}:18.04
        
xenial-deb:
    <<: *xenial
        
bionic-deb:
    <<: *bionic

.setup-tag: &tag
    before_script:
        - IFS='.' read -ra PARTS <<< "${CI_COMMIT_TAG}"
        - export MAJOR=${PARTS[0]:1}
        - export MINOR=${PARTS[1]}
        - export SUB=${PARTS[2]}
        - export DEBVER="$MAJOR.$MINOR.$SUB"
        # check the version in the python package matches the tag
        - PYVER=$(grep "__version__ = " labslauncher/__init__.py | awk '{gsub("\"","",$3); print $3}')
        - echo "DEBVER='$DEBVER'   PYVER='$PYVER'"
        - if [[ "$PYVER" != "$DEBVER" ]]; then echo "Mismatching TAG and PACKAGE versions"; exit 1; else echo "TAG and PACKAGE versions agree."; fi
        - echo -e "\e[1m\e[34mTagging with '\e[35m$MAJOR.$MINOR.$SUB\e[34m'\e[0m"
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    except:
        - branches

xenial-amd64-tag:
    <<: *xenial
    <<: *tag

bionic-amd64-tag:
    <<: *bionic
    <<: *tag

.setup-deb-push: &setup-deb-push
    image: ${IMAGE}:16.04
    before_script:
        - eval $(ssh-agent -s)
        - ssh-add <(echo "${SSH_PRIVATE_KEY}")

push-debs:
    <<: *setup-deb-push
    stage: push
    script:
        - for CODENAME in xenial bionic; do scp -o StrictHostKeyChecking=no *${CODENAME}.deb ${DEBREPO}:/var/www/apt/${CODENAME}-stable; done
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/

push-external:
    <<: *setup-deb-push
    stage: publish
    script:
        - for CODENAME in xenial bionic; do scp -o StrictHostKeyChecking=no *${CODENAME}.deb ${EXTERNALDEBREPO}:/mirror/apt/incoming/${CODENAME}-stable; done
    dependencies:
        - xenial-amd64-tag
        - bionic-amd64-tag
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    when: manual
